name: Set docker tool to run on remote server

on:
  workflow_dispatch:
    inputs:
      target-server:
        description: 'Target SSH server (user@host:port)'
        required: true
        type: string
      tool:
        description: 'Docker tool to run (must match a JSON file in docker-tools/)'
        required: true
        type: choice
        options:
          - caddy
          - myservice
          - otherservice
      extra_args:
        description: 'Optional additional docker args'
        required: false
        type: string

jobs:
  run-tool:
    name: Run Selected Docker Tool with Extras
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Load tool JSON args
        id: load_json
        run: |
          TOOL="${{ inputs.tool }}"
          FILE="docker-tools/${TOOL}.json"
          if [ ! -f "$FILE" ]; then
            echo "::error::File not found: $FILE"
            exit 1
          fi

          ARGS=$(jq -r '.[]' "$FILE")
          ARGS_JOINED=$(echo "$ARGS" | xargs)

          echo "docker_args=$ARGS_JOINED" >> "$GITHUB_OUTPUT"
          echo "loaded_tool_json<<EOF" >> "$GITHUB_OUTPUT"
          cat "$FILE" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Debug show values
        run: |
          echo "Target server: ${{ inputs.target-server }}"
          echo "Tool: ${{ inputs.tool }}"
          echo "Tool args: ${{ steps.load_json.outputs.docker_args }}"
          echo "Extra args: ${{ inputs.extra_args }}"

      # Start SSH agent
      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via SSH
        run: |
          SERVER="-p ${{ vars.SSH_PORT }} ${{ vars.SSH_USER }}@${{ inputs.target-server }}"
          TOOL="${{ inputs.tool }}"
          ARGS="${{ steps.load_json.outputs.docker_args }}"
          EXTRA="${{ inputs.extra_args }}"

          echo "Connecting to $SERVER..."
          ssh -o StrictHostKeyChecking=no $SERVER \
            "docker rm -f \"$TOOL\" || true"

          echo "Running docker run with all args..."
          ssh -o StrictHostKeyChecking=no $SERVER \
            "docker run -d --name \"$TOOL\" $ARGS $EXTRA"
