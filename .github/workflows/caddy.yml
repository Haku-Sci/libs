name: Deploy Caddy via SSH with templated Caddyfile

on:
  workflow_call:

jobs:
  deploy-caddy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set allow ips to send the image
      - uses: ./.github/workflows/whitelist-gh.yml
        id: whitelist
        with:
          firewall_name: "firewall-github-actions"
          port: "22"
      
      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH host key
        run: ssh-keyscan ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy templated Caddyfile to remote
        run: |
          scp -P ${{ vars.SSH_PORT }} Caddyfile ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}:/tmp/Caddyfile

      - name: Deploy Caddy container via SSH
        run: |
          ssh -p ${{ vars.SSH_PORT }} -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} bash << 'EOF'
            if docker ps -a --format '{{.Names}}' | grep -qw "caddy"; then
              docker rm -f caddy
            fi
            mkdir -p /opt/caddy/config /opt/caddy/data
            mv /tmp/Caddyfile /opt/caddy/config/Caddyfile
            docker run -d \
              --name caddy \
              -p 80:80 -p 443:443 \
              -v /opt/caddy/config/Caddyfile:/etc/caddy/Caddyfile:ro \
              -v /opt/caddy/data:/data \
              caddy:2-alpine
          EOF

      # Clean ips on the server side
      - name: Cleanup GitHub runner IP rule
        uses: adnanjaw/ip-whitelist-on-hetznerfw@v2
        with:
          hetzner_api_key: ${{ secrets.HETZNER_FIREWALL_API_TOKEN }}
          ip_address: ${{ steps.whitelist.outputs.ip }}
          firewall_name: "firewall-github-actions"
          port: "22"
          protocol: tcp
          direction: in
          description: "github-actions-${{ github.run_id }}"
          cleanup: true
