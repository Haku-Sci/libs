name: Deploy Neo4j via SSH

on:
  workflow_call:

jobs:
  deploy-neo4j:
    runs-on: ubuntu-latest
    env:
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}

    steps:
      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH host key
        run: ssh-keyscan ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Neo4j container via SSH
        run: |
          if [ -z "${{ env.NEO4J_PASSWORD }}" ]; then
            echo "::error::NEO4J_PASSWORD is empty. Aborting deployment."
            exit 1
          fi

          ssh -p ${{ vars.SSH_PORT }} -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} bash << 'EOF'
            # If the container already exists, only update the password
            if docker ps -a --format '{{.Names}}' | grep -qw "neo4j"; then
              echo "Neo4j container exists â€” updating initial password"
              docker exec neo4j bin/neo4j-admin dbms set-initial-password "${NEO4J_PASSWORD}"
            else
              # Deploy a new Neo4j container
              NETWORK_ARG=""
              if [ -n "${{ vars.DOCKER_NETWORK }}" ]; then
                if ! docker network inspect "${{ vars.DOCKER_NETWORK }}" > /dev/null 2>&1; then
                  docker network create "${{ vars.DOCKER_NETWORK }}"
                fi
                NETWORK_ARG="--network ${{ vars.DOCKER_NETWORK }}"
              fi

              mkdir -p /opt/neo4j/data
              docker run -d \
                --name neo4j \
                $NETWORK_ARG \
                -p 7474:7474 -p 7687:7687 \
                -v /opt/neo4j/data:/data \
                -e NEO4J_AUTH=neo4j/${NEO4J_PASSWORD} \
                neo4j:latest
              echo "Deployed new Neo4j container"
            fi
          EOF

      - name: Show Neo4j status on server
        run: |
          ssh -p ${{ vars.SSH_PORT }} -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} \
            "docker ps --filter name=neo4j --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'"
